*** a/libcpp/files.c	2023-01-09 21:23:36.822189307 +0300
--- b/libcpp/files.c	2023-01-09 21:27:01.154401378 +0300
***************
*** 1872,1895 ****
        /* |= is avoided in the next line because of an HP C compiler bug */
        result->have_once_only = result->have_once_only | f->once_only;
        if (f->buffer_valid)
! 	md5_buffer ((const char *)f->buffer,
! 		    f->st.st_size, result->entries[count].sum);
        else
! 	{
! 	  FILE *ff;
! 	  int oldfd = f->fd;
  
! 	  if (!open_file (f))
! 	    {
! 	      open_file_failed (pfile, f, 0, 0);
! 	      free (result);
! 	      return false;
! 	    }
! 	  ff = fdopen (f->fd, "rb");
! 	  md5_stream (ff, result->entries[count].sum);
! 	  fclose (ff);
! 	  f->fd = oldfd;
! 	}
        result->entries[count].size = f->st.st_size;
      }
  
--- 1872,1897 ----
        /* |= is avoided in the next line because of an HP C compiler bug */
        result->have_once_only = result->have_once_only | f->once_only;
        if (f->buffer_valid)
!     {
!         md5_buffer ((const char *)f->buffer,
!                       f->st.st_size, result->entries[count].sum);
!     }
        else
!     {
!           if (!read_file (pfile, f, 0))
!             {
!               return false;
!             }
! 
!           md5_buffer ((const char *)f->buffer,
!                       f->st.st_size, result->entries[count].sum);
  
!           const void* to_free = f->buffer_start;
!           f->buffer_start = NULL;
!           f->buffer = NULL;
!           f->buffer_valid = false;
!           free ((void*) to_free);
!         }
        result->entries[count].size = f->st.st_size;
      }
  
