diff -cr a/src/resize.c b/src/resize.c
*** a/src/resize.c	2016-09-14 03:57:29.000000000 +0300
--- b/src/resize.c	2016-09-20 19:42:27.841840137 +0300
***************
*** 50,97 ****
                  const int oldx, const int oldy,
                  const int oldw, const int oldh)
  {
!    if(context & MC_BORDER_N) {
!       int delta = (y - starty) / np->yinc;
!       delta *= np->yinc;
!       if(oldh - delta >= np->minHeight
!          && (oldh - delta <= np->maxHeight || delta > 0)) {
!          np->height = oldh - delta;
!          np->y = oldy + delta;
!       }
!       if(!(context & (MC_BORDER_E | MC_BORDER_W))) {
!          FixWidth(np);
!       }
!    }
!    if(context & MC_BORDER_S) {
!       int delta = (y - starty) / np->yinc;
!       delta *= np->yinc;
!       np->height = oldh + delta;
!       np->height = Max(np->height, np->minHeight);
!       np->height = Min(np->height, np->maxHeight);
!       if(!(context & (MC_BORDER_E | MC_BORDER_W))) {
!          FixWidth(np);
        }
!    }
!    if(context & MC_BORDER_E) {
!       int delta = (x - startx) / np->xinc;
!       delta *= np->xinc;
!       np->width = oldw + delta;
!       np->width = Max(np->width, np->minWidth);
!       np->width = Min(np->width, np->maxWidth);
!       if(!(context & (MC_BORDER_N | MC_BORDER_S))) {
!          FixHeight(np);
        }
     }
!    if(context & MC_BORDER_W) {
!       int delta = (x - startx) / np->xinc;
!       delta *= np->xinc;
!       if(oldw - delta >= np->minWidth
!          && (oldw - delta <= np->maxWidth || delta > 0)) {
!          np->width = oldw - delta;
!          np->x = oldx + delta;
        }
!       if(!(context & (MC_BORDER_N | MC_BORDER_S))) {
!          FixHeight(np);
        }
     }
  
--- 50,101 ----
                  const int oldx, const int oldy,
                  const int oldw, const int oldh)
  {
!    if(!(np->state.maxFlags & MAX_VERT)) {
!       if(context & MC_BORDER_N) {
!          int delta = (y - starty) / np->yinc;
!          delta *= np->yinc;
!          if(oldh - delta >= np->minHeight
!                && (oldh - delta <= np->maxHeight || delta > 0)) {
!             np->height = oldh - delta;
!             np->y = oldy + delta;
!          }
!          if(!(context & (MC_BORDER_E | MC_BORDER_W))) {
!             FixWidth(np);
!          }
        }
!       if(context & MC_BORDER_S) {
!          int delta = (y - starty) / np->yinc;
!          delta *= np->yinc;
!          np->height = oldh + delta;
!          np->height = Max(np->height, np->minHeight);
!          np->height = Min(np->height, np->maxHeight);
!          if(!(context & (MC_BORDER_E | MC_BORDER_W))) {
!             FixWidth(np);
!          }
        }
     }
!    if(!(np->state.maxFlags & MAX_HORIZ)) {
!       if(context & MC_BORDER_E) {
!          int delta = (x - startx) / np->xinc;
!          delta *= np->xinc;
!          np->width = oldw + delta;
!          np->width = Max(np->width, np->minWidth);
!          np->width = Min(np->width, np->maxWidth);
!          if(!(context & (MC_BORDER_N | MC_BORDER_S))) {
!             FixHeight(np);
!          }
        }
!       if(context & MC_BORDER_W) {
!          int delta = (x - startx) / np->xinc;
!          delta *= np->xinc;
!          if(oldw - delta >= np->minWidth
!                && (oldw - delta <= np->maxWidth || delta > 0)) {
!             np->width = oldw - delta;
!             np->x = oldx + delta;
!          }
!          if(!(context & (MC_BORDER_N | MC_BORDER_S))) {
!             FixHeight(np);
!          }
        }
     }
  
***************
*** 135,148 ****
     if(!(np->state.border & BORDER_RESIZE)) {
        return;
     }
!    if(np->state.status & STAT_FULLSCREEN) {
        return;
     }
-    if(np->state.maxFlags) {
-       np->state.maxFlags = MAX_NONE;
-       WriteState(np);
-       ResetBorder(np);
-    }
     if(JUNLIKELY(!GrabMouseForResize(context))) {
        return;
     }
--- 139,148 ----
     if(!(np->state.border & BORDER_RESIZE)) {
        return;
     }
!    if((np->state.status & STAT_FULLSCREEN) 
!    || (np->state.maxFlags & MAX_VERT && np->state.maxFlags & MAX_HORIZ)) {
        return;
     }
     if(JUNLIKELY(!GrabMouseForResize(context))) {
        return;
     }
***************
*** 251,264 ****
     if(!(np->state.border & BORDER_RESIZE)) {
        return;
     }
!    if(np->state.status & STAT_FULLSCREEN) {
        return;
     }
-    if(np->state.maxFlags) {
-       np->state.maxFlags = MAX_NONE;
-       WriteState(np);
-       ResetBorder(np);
-    }
  
     if(JUNLIKELY(JXGrabKeyboard(display, np->parent, True, GrabModeAsync,
                                 GrabModeAsync, CurrentTime) != GrabSuccess)) {
--- 251,260 ----
     if(!(np->state.border & BORDER_RESIZE)) {
        return;
     }
!    if((np->state.status & STAT_FULLSCREEN)
!    || (np->state.maxFlags & MAX_VERT && np->state.maxFlags & MAX_HORIZ)) {
        return;
     }
  
     if(JUNLIKELY(JXGrabKeyboard(display, np->parent, True, GrabModeAsync,
                                 GrabModeAsync, CurrentTime) != GrabSuccess)) {
***************
*** 322,337 ****
           DiscardKeyEvents(&event, np->window);
           switch(GetKey(MC_NONE, event.xkey.state, event.xkey.keycode) & 0xFF) {
           case ACTION_UP:
!             deltay = Min(-np->yinc, -10);
              break;
           case ACTION_DOWN:
!             deltay = Max(np->yinc, 10);
              break;
           case ACTION_RIGHT:
!             deltax = Max(np->xinc, 10);
              break;
           case ACTION_LEFT:
!             deltax = Min(-np->xinc, -10);
              break;
           default:
              StopResize(np);
--- 318,341 ----
           DiscardKeyEvents(&event, np->window);
           switch(GetKey(MC_NONE, event.xkey.state, event.xkey.keycode) & 0xFF) {
           case ACTION_UP:
!             if(!(np->state.maxFlags & MAX_VERT)) {
!                deltay = Min(-np->yinc, -10);
!             }
              break;
           case ACTION_DOWN:
!             if(!(np->state.maxFlags & MAX_VERT)) {
!                deltay = Max(np->yinc, 10);
!             }
              break;
           case ACTION_RIGHT:
!             if(!(np->state.maxFlags & MAX_HORIZ)) {
!                deltax = Max(np->xinc, 10);
!             }
              break;
           case ACTION_LEFT:
!             if(!(np->state.maxFlags & MAX_HORIZ)) {
!                deltax = Min(-np->xinc, -10);
!             }
              break;
           default:
              StopResize(np);

diff -cr a/src/winmenu.c b/src/winmenu.c
*** a/src/winmenu.c	2016-09-20 19:38:50.000000000 +0300
--- b/src/winmenu.c	2016-09-20 19:08:47.000000000 +0300
***************
*** 53,62 ****
        AddWindowMenuItem(menu, NULL, MA_NONE, np, 0);
     }
  
!    if(!(np->state.status & (STAT_FULLSCREEN | STAT_MINIMIZED)
!         || np->state.maxFlags)) {
        if(np->state.status & (STAT_MAPPED | STAT_SHADED)) {
!          if(np->state.border & BORDER_RESIZE) {
              AddWindowMenuItem(menu, _("Resize"), MA_RESIZE, np, 0);
           }
           if(np->state.border & BORDER_MOVE) {
--- 53,62 ----
        AddWindowMenuItem(menu, NULL, MA_NONE, np, 0);
     }
  
!    if(!(np->state.status & (STAT_FULLSCREEN | STAT_MINIMIZED))) {
        if(np->state.status & (STAT_MAPPED | STAT_SHADED)) {
!          if(np->state.border & BORDER_RESIZE &&
!             !(np->state.maxFlags & MAX_VERT && np->state.maxFlags & MAX_HORIZ)) {
              AddWindowMenuItem(menu, _("Resize"), MA_RESIZE, np, 0);
           }
           if(np->state.border & BORDER_MOVE) {
