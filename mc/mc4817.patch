diff --git a/src/filemanager/panel.c b/src/filemanager/panel.c
index f9ca01f4..bdccb87a 100644
--- a/src/filemanager/panel.c
+++ b/src/filemanager/panel.c
@@ -80,6 +80,11 @@
 
 #include "panel.h"
 
+void mclib_v_draw_object(int _y, int _x, char* _ch){
+    tty_gotoyx (_y, _x);
+    tty_print_string (_ch);
+}
+
 /*** global variables ****************************************************************************/
 
 /* The hook list for the select file function */
@@ -366,6 +371,8 @@ static panel_field_t panel_fields[] = {
 };
 /* *INDENT-ON* */
 
+static char *panel_dtopmiddle_char = NULL;
+static char *panel_bottommiddle_char = NULL;
 static char *panel_sort_up_char = NULL;
 static char *panel_sort_down_char = NULL;
 
@@ -486,6 +493,142 @@ add_permission_string (const char *dest, int width, file_entry_t *fe, file_attr_
     }
 }
 
+
+static void
+panel_update_hline (WPanel *panel) {
+
+    int orignx = panel->widget.rect.x;
+    int origny = panel->widget.rect.y;
+	
+	//tty_setcolor (COLOR_NORMAL);
+
+    if (panel->list_format==list_full) {
+	mclib_v_draw_object (origny, orignx+panel->widget.rect.cols-22, panel_dtopmiddle_char);
+	mclib_v_draw_object (origny, orignx+panel->widget.rect.cols-14, panel_dtopmiddle_char);
+    }
+
+    if (panel->list_format==list_brief) {
+       int brief_cols = panel->brief_cols;
+       for (int i=1;i<brief_cols;i++) 
+          mclib_v_draw_object (origny, orignx+((int)((panel->widget.rect.cols-2)/brief_cols))*i, panel_dtopmiddle_char);
+    }
+
+    if (panel->list_format==list_user) {
+	int     length;
+	GSList *format, *home;
+
+	length     = 1;
+	home     = panel->format;
+	int width = panel->widget.rect.cols;
+
+	for (format = home; format != NULL; format = g_slist_next (format)) {
+
+	    if (length == width)
+		break;
+      format_item_t *fi = (format_item_t *) format->data;
+	    if (fi->string_fn){
+		int len;
+
+		len = fi->field_len;
+		if (len + length > width)
+		    len = width - length;
+		if (len >= BUF_MEDIUM)
+		    len = BUF_MEDIUM - 1;
+		if (len <= 0)
+		    break;
+
+		length += len;
+
+	    } else {
+		mclib_v_draw_object (origny, orignx+length, panel_dtopmiddle_char);
+
+		//if (panel->split){
+		//    mclib_v_draw_object (origny, orignx+length+panel->widget.cols/2-1, panel_dtopmiddle_char);
+		//}
+		length++;
+	    }
+	
+	}
+	//if (panel->split){
+	//    mclib_v_draw_object (origny, orignx+panel->widget.cols/2-1, panel_dtopmiddle_char);
+	//}
+    }
+
+}
+
+ static void panel_update_fline (WPanel *panel)
+ {
+    int pos_mini_info;
+  //  if (show_mini_info)
+ 	pos_mini_info = 3;
+  //  else
+  //  {
+ 	// pos_mini_info = 1;
+  //  }
+    
+    //tty_setcolor(COLOR_NORMAL);
+
+    int orignx = panel->widget.rect.x;
+    int origny = panel->widget.rect.y;
+    
+    if (panel->list_format==list_full)
+    {
+       mclib_v_draw_object (origny+panel->widget.rect.lines-pos_mini_info, orignx+panel->widget.rect.cols-22, panel_bottommiddle_char);
+       mclib_v_draw_object (origny+panel->widget.rect.lines-pos_mini_info, orignx+panel->widget.rect.cols-14, panel_bottommiddle_char);
+    }
+    
+    if (panel->list_format==list_brief)
+    {
+       int brief_cols = panel->brief_cols;
+       for (int i=1;i<brief_cols;i++) 
+          mclib_v_draw_object (origny+panel->widget.rect.lines-pos_mini_info, orignx+((int)((panel->widget.rect.cols-2)/brief_cols))*i, panel_bottommiddle_char);
+    }
+    
+    
+    if (panel->list_format==list_user)
+    {
+          int      length;
+          GSList *format, *home;
+           
+ 	 length    = 1;
+          home      = panel->format;
+ 	 int width = panel->widget.rect.cols;
+ 
+          for (format = home; format != NULL; format = g_slist_next (format)) {
+ 
+     	    if (length == width)
+	         break;
+      format_item_t *fi = (format_item_t *) format->data;  
+ 	    if (fi->string_fn){
+ 	        int len;
+ 
+ 		len = fi->field_len;
+ 		if (len + length > width)
+ 		    len = width - length;
+ 		if (len >= BUF_MEDIUM)
+ 		    len = BUF_MEDIUM - 1;
+ 		if (len <= 0)
+ 		    break;
+ 
+ 	        length += len;
+ 		
+ 	    } else {
+ 		mclib_v_draw_object (origny+panel->widget.rect.lines-pos_mini_info, orignx+length, panel_bottommiddle_char);
+ 		
+ 		
+ 		//if (panel->split){
+ 		//    mclib_v_draw_object (origny+panel->widget.lines-pos_mini_info, orignx+length+panel->widget.cols/2-1, panel_bottommiddle_char);
+ 		//}
+ 		length++;
+ 	    }
+ 	    //if (panel->split){
+ 		//mclib_v_draw_object (origny+panel->widget.lines-pos_mini_info, orignx+panel->widget.cols/2-1, panel_bottommiddle_char);
+ 	    //}
+ 	}
+ 
+    }   
+ }
+
 /* --------------------------------------------------------------------------------------------- */
 /** String representations of various file attributes name */
 
@@ -1184,6 +1327,7 @@ mini_info_separator (const WPanel *panel)
         tty_draw_hline (w->rect.y + y, w->rect.x + 1, ACS_HLINE, w->rect.cols - 2);
         /* Status displays total marked size.
          * Centered in panel, full format. */
+        panel_update_fline (panel);
         display_total_marked_size (panel, y, -1, FALSE);
     }
 }
@@ -1335,18 +1479,17 @@ show_dir (const WPanel *panel)
     }
 
     widget_gotoyx (w, 0, 1);
-    tty_print_string (panel_history_prev_item_char);
 
     tmp = panels_options.show_dot_files ? panel_hiddenfiles_show_char : panel_hiddenfiles_hide_char;
-    tmp = g_strdup_printf ("%s[%s]%s", tmp, panel_history_show_list_char,
-                           panel_history_next_item_char);
+    tmp = g_strdup_printf ("%s%s%s%s", panel_history_prev_item_char, tmp,
+                           panel_history_show_list_char,panel_history_next_item_char);
 
-    widget_gotoyx (w, 0, w->rect.cols - 6);
+    widget_gotoyx (w, 0, w->rect.cols - 5);
     tty_print_string (tmp);
 
     g_free (tmp);
-
-    widget_gotoyx (w, 0, 3);
+    panel_update_hline (panel);
+    widget_gotoyx (&panel->widget, 0, 2);
 
     if (panel->is_panelized)
         tty_printf (" %s ", _("Panelize"));
@@ -1399,6 +1542,7 @@ show_dir (const WPanel *panel)
     }
 
     show_free_space (panel);
+    panel_update_fline (panel);
 
     if (panel->active)
         tty_set_normal_attrs ();
@@ -1583,7 +1727,7 @@ panel_paint_sort_info (const WPanel *panel)
             panel->sort_info.reverse ? panel_sort_up_char : panel_sort_down_char;
         char *str;
 
-        str = g_strdup_printf ("%s%s", sort_sign, Q_ (panel->sort_field->hotkey));
+        str = g_strdup_printf ("%s", Q_ (panel->sort_field->hotkey));
         widget_gotoyx (panel, 1, 1);
         tty_print_string (str);
         g_free (str);
@@ -4085,16 +4229,16 @@ panel_mouse_callback (Widget *w, mouse_msg_t msg, mouse_event_t *event)
         if (event->y == 0)
         {
             /* top frame */
-            if (event->x == 1)
+            if (event->x == w->rect.cols - 5)
                 /* "<" button */
                 directory_history_prev (panel);
             else if (event->x == w->rect.cols - 2)
                 /* ">" button */
                 directory_history_next (panel);
-            else if (event->x >= w->rect.cols - 5 && event->x <= w->rect.cols - 3)
+            else if (event->x == w->rect.cols - 3)
                 /* "^" button */
                 directory_history_list (panel);
-            else if (event->x == w->rect.cols - 6)
+            else if (event->x == w->rect.cols - 4)
                 /* "." button show/hide hidden files */
                 send_message (filemanager, NULL, MSG_ACTION, CK_ShowHidden, NULL);
             else
@@ -4107,7 +4251,7 @@ panel_mouse_callback (Widget *w, mouse_msg_t msg, mouse_event_t *event)
             break;
         }
 
-        if (event->y == 1)
+        if (event->y == 1 && event->x == 1)
         {
             /* sort on clicked column */
             mouse_sort_col (panel, event->x + 1);
@@ -4116,6 +4260,28 @@ panel_mouse_callback (Widget *w, mouse_msg_t msg, mouse_event_t *event)
 
         if (!is_active)
             (void) change_panel ();
+        if (event->y <= 1)
+        {
+            mark_if_marking (panel, event, panel->active);
+            if (panels_options.mouse_move_pages)
+                prev_page (panel);
+            else
+                move_up (panel);
+            event->result.repeat = msg == MSG_MOUSE_DOWN;
+            break;
+        }
+   
+        if (!((panel->top + event->y-1 <= panel->dir.len) && event->y-1 <= panel_lines (panel)))
+        {
+            mark_if_marking (panel, event, panel->active);
+            if (panels_options.mouse_move_pages)
+                next_page (panel);
+            else
+                move_down (panel);
+            event->result.repeat = msg == MSG_MOUSE_DOWN;
+            break;
+        }
+
         MC_FALLTHROUGH;
 
     case MSG_MOUSE_DRAG:
@@ -5485,6 +5651,8 @@ panel_panelize_save (WPanel *panel)
 void
 panel_init (void)
 {
+    panel_dtopmiddle_char = mc_skin_get ("Lines", "dtopmiddle", "╤");
+    panel_bottommiddle_char = mc_skin_get ("Lines", "bottommiddle", "┴");
     panel_sort_up_char = mc_skin_get ("widget-panel", "sort-up-char", "'");
     panel_sort_down_char = mc_skin_get ("widget-panel", "sort-down-char", ".");
     panel_hiddenfiles_show_char = mc_skin_get ("widget-panel", "hiddenfiles-show-char", ".");
@@ -5509,6 +5677,8 @@ panel_init (void)
 void
 panel_deinit (void)
 {
+    g_free (panel_bottommiddle_char);
+    g_free (panel_dtopmiddle_char);
     g_free (panel_sort_up_char);
     g_free (panel_sort_down_char);
     g_free (panel_hiddenfiles_show_char);
