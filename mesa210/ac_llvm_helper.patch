diff --git a/src/amd/llvm/ac_llvm_helper.cpp b/src/amd/llvm/ac_llvm_helper.cpp
index ebeafaea5539545767377e5f5da5c8b3af16dae0..0ab9517f431900c4724a6c8c0a064b10879b8ba3 100644
--- a/src/amd/llvm/ac_llvm_helper.cpp
+++ b/src/amd/llvm/ac_llvm_helper.cpp
@@ -321,6 +321,9 @@ LLVMValueRef ac_build_atomic_rmw(struct ac_llvm_context *ctx, LLVMAtomicRMWBinOp
    unsigned SSID = llvm::unwrap(ctx->context)->getOrInsertSyncScopeID(sync_scope);
    return llvm::wrap(llvm::unwrap(ctx->builder)
                         ->CreateAtomicRMW(binop, llvm::unwrap(ptr), llvm::unwrap(val),
+#if LLVM_VERSION_MAJOR >= 13
+                                          llvm::MaybeAlign(0),
+#endif
                                           llvm::AtomicOrdering::SequentiallyConsistent, SSID));
 }
 
@@ -331,6 +334,9 @@ LLVMValueRef ac_build_atomic_cmp_xchg(struct ac_llvm_context *ctx, LLVMValueRef
    return llvm::wrap(llvm::unwrap(ctx->builder)
                         ->CreateAtomicCmpXchg(llvm::unwrap(ptr), llvm::unwrap(cmp),
                                               llvm::unwrap(val),
+#if LLVM_VERSION_MAJOR >= 13
+                                              llvm::MaybeAlign(0),
+#endif
                                               llvm::AtomicOrdering::SequentiallyConsistent,
                                               llvm::AtomicOrdering::SequentiallyConsistent, SSID));
 }
