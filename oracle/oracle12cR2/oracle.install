pre_install() {

if [ -f /etc/security/limits.conf ]; then
	echo "oracle		soft	nproc		2047" >> /etc/security/limits.conf
	echo "oracle		hard	nproc		16383" >> /etc/security/limits.conf
	echo "oracle		soft	nofile		1023" >> /etc/security/limits.conf
	echo "oracle		hard	nofile		65535" >> /etc/security/limits.conf
else
	echo "==> The file /etc/security/limits.conf dosn't exist!"
fi

/usr/bin/touch /etc/sysctl.d/oracle.conf
echo "fs.file-max = 65535" >> /etc/sysctl.d/oracle.conf
echo "kernel.shmall = 2097152" >> /etc/sysctl.d/oracle.conf
echo "kernel.shmmax = 2147483648" >> /etc/sysctl.d/oracle.conf
echo "kernel.shmmni = 4096" >> /etc/sysctl.d/oracle.conf
echo "kernel.sem = 250 32000 100 128" >> /etc/sysctl.d/oracle.conf
echo "net.ipv4.ip_local_port_range = 1024 65535" >> /etc/sysctl.d/oracle.conf
echo "net.core.rmem_default = 4194304" >> /etc/sysctl.d/oracle.conf
echo "net.core.rmem_max = 4194304" >> /etc/sysctl.d/oracle.conf
echo "net.core.wmem_default = 262144" >> /etc/sysctl.d/oracle.conf
echo "net.core.wmem_max = 262144" >> /etc/sysctl.d/oracle.conf

if [ ! -d "/usr/lib64" ]; then
    ln -s /usr/lib /usr/lib64
fi

}

post_install() {

    /usr/sbin/groupadd dba
    /usr/sbin/useradd -g dba -s /bin/bash oracle
    /bin/chown -R oracle:dba /home/oracle

    if [ "$(id -u)" = "0" ]; then
  	    echo "==> Installing Oracle database in silent mode ..."
  	    xhost +
	    cd /home/oracle/tmp/database
	    export DISTRIB=`pwd`
	    su oracle -c \
	    "/bin/sh ./runInstaller -silent -ignoreSysPrereqs -ignorePrereq \
	    -responseFile $DISTRIB/install/ee.rsp -waitforcompletion -showProgress "
	
	    # Remove not needed components
	    # APEX
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/apex 
	    # ORDS
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/ords
	    # SQL Developer
        rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/sqldeveloper
        # UCP connection pool
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/ucp
        # All installer files
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/lib/*.zip
        # OUI backup
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/inventory/backup/*
        # Network tools help
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/network/tools/help
        # Database upgrade assistant
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/assistants/dbua
        # Database migration assistant
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/dmu
        # Remove pilot workflow installer
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/install/pilot
        # Support tools
	    rm -rf /home/oracle/app/oracle/product/12.2.0/dbhome/suptools
        # Temp location
	    rm -rf /home/oracle/tmp

	    mkdir -p /home/oracle/app/oracle/product/12.2.0/network/admin/
	    echo "LISTENER = " > /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "    (DESCRIPTION_LIST = " >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	(DESCRIPTION = " >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	    (ADDRESS = " >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "		(PROTOCOL = TCP)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "		(HOST = localhost)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "		(PORT = 1521)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	    )" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	    (ADDRESS = " >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "		(PROTOCOL = IPC)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "		(KEY = EXTPROC1521)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	    )" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "	)" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    echo "    )" >> /home/oracle/app/oracle/product/12.2.0/network/admin/litener.ora
	    /bin/chown -R oracle:dba /home/oracle /home/oracle/app/oracle/product/12.2.0/network/
    else
    	echo "You're not root. Aborting installation!"
    fi

}

post_upgrade() {
    post_install $1
}

post_remove() {

	if [ `grep oracle /etc/passwd` ]; then
		userdel oracle
	fi 
   
	if [ `grep dba /etc/group` ]; then
		groupdel dba
	fi		 
	
	if [ -f /etc/oratab ]; then
		rm /etc/oratab
	fi
	
	if [ -f /etc/oraInst.loc ]; then
		rm /etc/oraInst.loc
	fi

	if [ -f /var/log/oracle ]; then
		rm -rf /var/log/oracle
	fi

	if [ -f /etc/sysctl.d/oracle.conf ]; then
		mv -f /etc/sysctl.d/oracle.conf /etc/sysctl.d/oracle.conf.old
	fi
	
	if [ -f /etc/security/limits.conf ]; then
		touch /etc/security/limits.conf2
		sed -e '/oracle/d' /etc/security/limits.conf > /etc/security/limits.conf2
		mv /etc/security/limits.conf2 /etc/security/limits.conf
	fi

	if [ -f /usr/local/bin/dbhome ]; then
		rm /usr/local/bin/dbhome
	fi

	if [ -f /usr/local/bin/oraenv ]; then
		rm /usr/local/bin/oraenv
	fi

	if [ -f /usr/local/bin/coraenv ]; then
		rm /usr/local/bin/coraenv
	fi

}
 
op=$1
shift

$op $*

