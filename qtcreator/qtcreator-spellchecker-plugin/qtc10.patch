diff -cr a/src/Parsers/CppParser/cppdocumentparser.cpp b/src/Parsers/CppParser/cppdocumentparser.cpp
*** a/src/Parsers/CppParser/cppdocumentparser.cpp	2023-02-22 08:37:19.858125367 +0300
--- b/src/Parsers/CppParser/cppdocumentparser.cpp	2023-02-22 08:33:23.014782744 +0300
***************
*** 473,479 ****
      return;
    }
  
!   const QString fileName = docPtr->fileName();
    const bool shouldParse = shouldParseDocument( fileName );
  
    bool queueMore;
--- 473,479 ----
      return;
    }
  
!   const QString fileName = docPtr->filePath().toString();
    const bool shouldParse = shouldParseDocument( fileName );
  
    bool queueMore;
***************
*** 555,561 ****
    /* Only re-parse the files that were added. */
    static CppEditor::CppModelManager* modelManager = CppEditor::CppModelManager::instance();
  
!   QStringSet filesToUpdate;
    size_t filesOutstanding;
    size_t filesInProcess;
  
--- 555,561 ----
    /* Only re-parse the files that were added. */
    static CppEditor::CppModelManager* modelManager = CppEditor::CppModelManager::instance();
  
!   QSet<Utils::FilePath> filesToUpdate;
    size_t filesOutstanding;
    size_t filesInProcess;
  
***************
*** 568,574 ****
        fileIter = d->filesToUpdate.erase( fileIter );
        if( shouldParseDocument( file ) == true ) {
          d->filesInProcess.insert( file );
!         filesToUpdate.insert( file );
        }
      }
  
--- 568,574 ----
        fileIter = d->filesToUpdate.erase( fileIter );
        if( shouldParseDocument( file ) == true ) {
          d->filesInProcess.insert( file );
!         filesToUpdate.insert( Utils::FilePath::fromString(file) );
        }
      }
  
***************
*** 649,655 ****
    using Watcher    = CppDocumentProcessor::Watcher;
    using WatcherPtr = CppDocumentProcessor::WatcherPtr;
    using ResultType = CppDocumentProcessor::ResultType;
!   const QString fileName = docPtr->fileName();
    HashWords hashes;
    if( fileName == d->currentEditorFileName ) {
      hashes = d->tokenHashes.get();
--- 649,655 ----
    using Watcher    = CppDocumentProcessor::Watcher;
    using WatcherPtr = CppDocumentProcessor::WatcherPtr;
    using ResultType = CppDocumentProcessor::ResultType;
!   const QString fileName = docPtr->filePath().toString();
    HashWords hashes;
    if( fileName == d->currentEditorFileName ) {
      hashes = d->tokenHashes.get();
diff -cr a/src/Parsers/CppParser/cppdocumentprocessor.cpp b/src/Parsers/CppParser/cppdocumentprocessor.cpp
*** a/src/Parsers/CppParser/cppdocumentprocessor.cpp	2023-02-22 08:37:19.858125367 +0300
--- b/src/Parsers/CppParser/cppdocumentprocessor.cpp	2023-02-22 08:33:33.041449805 +0300
***************
*** 55,61 ****
    , tokenHashes( hashWords )
    , settings( cppSettings )
    , trUnit( documentPointer->translationUnit() )
!   , fileName( documentPointer->fileName() )
  {}
  // --------------------------------------------------
  
--- 55,61 ----
    , tokenHashes( hashWords )
    , settings( cppSettings )
    , trUnit( documentPointer->translationUnit() )
!   , fileName( documentPointer->filePath().toString() )
  {}
  // --------------------------------------------------
  
***************
*** 465,471 ****
      return {};
    }
    static CppEditor::CppModelManager* cppModelManager    = CppEditor::CppModelManager::instance();
!   CppEditor::CppEditorDocumentHandle* cppEditorDocument = cppModelManager->cppEditorDocument( d->docPtr->fileName() );
    if( cppEditorDocument == nullptr ) {
      return {};
    }
--- 465,471 ----
      return {};
    }
    static CppEditor::CppModelManager* cppModelManager    = CppEditor::CppModelManager::instance();
!   CppEditor::CppEditorDocumentHandle* cppEditorDocument = cppModelManager->cppEditorDocument( d->docPtr->filePath() );
    if( cppEditorDocument == nullptr ) {
      return {};
    }
